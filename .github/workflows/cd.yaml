name: deploy
on:
  push:
    branches: [main]
jobs:
    terraform:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

        - name: setup Terraform
          uses: hashicorp/setup-terraform@v1
          with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
            terraform_wrapper: false

        - name: Terraform init
          working-directory: terraform
          id: init
          run: terraform init -input=false

        - name: set Terraform variables
          run: |
            echo "TF_VAR_website_domain=${{ secrets.WEBSITE_DOMAIN }}" >> $GITHUB_ENV
            echo "TF_VAR_root_domain=${{ secrets.ROOT_DOMAIN }}" >> $GITHUB_ENV

        - name: Terraform apply
          working-directory: terraform
          run: |
            terraform apply -auto-approve
            terraform output
    deploy-website:
      runs-on: ubuntu-latest
      needs: [terraform]
      steps:
        - uses: actions/checkout@v2

        - name: configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

        - name: deploy static site to S3 bucket
          run: |
            aws s3 sync . s3://${{ secrets.WEBSITE_DOMAIN }} --delete
          working-directory: build
